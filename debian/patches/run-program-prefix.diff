#! /bin/sh -e

# DP: Carried over from glibc2.2, need to figure out why it's here.
# DP: (Probably has something to do with fakeroot)
# DP: Date: (Updated 2005-01-02 gotom)

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

--- sunrpc/Makefile.orig	2006-03-03 18:43:24.000000000 +0300
+++ sunrpc/Makefile	2006-03-03 18:41:58.000000000 +0300
@@ -145,6 +145,7 @@
 include $(patsubst %,$(..)cppflags-iterator.mk,$(cpp-srcs-left))
 
 # Tell rpcgen where to find the C preprocessor.
+run-program-prefix =
 rpcgen-cmd = CPP='$(CC) -E -x c-header' $(built-program-cmd) -Y ../scripts
 
 # Install the rpc data base file.
--- timezone/Makefile.orig	2006-03-03 20:42:13.000000000 +0300
+++ timezone/Makefile	2006-03-03 20:41:52.000000000 +0300
@@ -128,6 +128,7 @@
 # We have to use `-d $(inst_zonedir)' to explictly tell zic where to
 # place the output files although $(zonedir) is compiled in.  But the
 # user might have set $(install_root) on the command line of `make install'.
+run-program-prefix =
 zic-cmd = $(built-program-cmd) -d $(inst_zonedir)
 tzcompile = $(zic-cmd)$(target-zone-flavor) -L $(word 3,$^) \
 	    -y $(dir $(word 4,$^))$(notdir $(word 4,$^)) $<
